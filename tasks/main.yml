---
# Set privileges required for hostmount
- include: privileges.yml

- name: Get nodes matching elasticsearch selector
  command: >
    oc get node -l {{ openshift_hosted_logging_elasticsearch_nodeselector }}
    --template '{{ '{{ range .items }}{{ .metadata.name }}{{ "\n"}}{{ end }}' }}'
  changed_when: false
  register: get_elasticsearch_nodes

- name: Elasticsearch hostmount directory on nodes
  delegate_to: "{{ item }}"
  file:
    state: directory
    path: "{{ openshift_hosted_logging_elasticsearch_hostmount_path }}"
    owner: "{{ openshift_hosted_logging_elasticsearch_hostmount_path_owner }}"
    group: "{{ openshift_hosted_logging_elasticsearch_hostmount_path_group }}"
    mode: "{{ openshift_hosted_logging_elasticsearch_hostmount_path_mode }}"
  with_items: "{{ get_elasticsearch_nodes.stdout_lines }}"

- name: Get list of elasticsearch nodes with hostmount
  command: >-
    oc get dc -n logging -l component=es
    --template '{{ '{{ range .items }}{{ $hostname := index .spec.template.spec.nodeSelector "kubernetes.io/hostname" }}{{ if $hostname }}{{ range .spec.template.spec.volumes }}{{ if .hostPath.path }}{{ if eq .hostPath.path "' ~ openshift_hosted_logging_elasticsearch_hostmount_path ~ '" }}{{ $hostname }}{{ "\n" }}{{ end }}{{ end }}{{ end }}{{ end }}{{ end }}' }}'
  changed_when: false
  register: get_elasticsearch_nodes_with_hostmount

- set_fact:
    openshift_hosted_logging_elasticsearch_hostmount_available_nodes: "{{ get_elasticsearch_nodes.stdout_lines | difference(get_elasticsearch_nodes_with_hostmount.stdout_lines) }}"

- name: Get list of elasticsearch deployment configs
  command: >
    oc get dc -n logging -l component=es
    --template '{{ '{{ range .items }}{{ .metadata.name }}{{ "\n" }}{{ end }}' }}'
  changed_when: false
  register: get_elasticsearch_dcs

# Configure elasticsearch deploymentconfigs
- include: configure-dc.yml
  with_items: "{{ get_elasticsearch_dcs.stdout_lines }}"
  loop_control:
    loop_var: elasticsearch_dc
